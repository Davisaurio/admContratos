@model NuevoSicop.Models.VentanillaUnicaViewModel

<link href="~/assets/datatables/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="~/assets/datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

@if (@Model.Error.Length > 1)
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        <button class="close" type="button" data-dismiss="alert" aria-label="Close"><span class="mdi mdi-close" aria-hidden="true"></span></button>
        <div class="icon"> <span class="mdi mdi-close-circle-o"></span></div>
        <div class="message"><strong>Problemas!</strong>@Model.Error</div>
    </div>

}
@if (@Model.Exito.Length > 1)
{
    <div class="alert alert-success alert-dismissible" role="alert">
        <button class="close" type="button" data-dismiss="alert" aria-label="Close"><span class="mdi mdi-close" aria-hidden="true"></span></button>
        <div class="icon"> <span class="mdi mdi mdi-check"></span></div>
        <div class="message"><strong>Éxito!</strong>@Model.Exito</div>
    </div>

}

<style>
     .header4t {background-color: maroon;
      color: goldenrod;
      
    }
     .prp{
         width: 115px;
       
     }
</style>

@using (Html.BeginForm("Filtros","Ventanilla", FormMethod.Post, new {@id = "FiltroForm"}))
{
    <div class="row">
        <div class="col-lg-3">
            <div class="input-group">
                <div class="input-group-prepend">@Html.LabelFor(x => Model.Estatus, new {@class = "input-group-text prp"}) </div>
                @Html.DropDownListFor(x => Model.Estatus, Model.EstEstimacion, "- Selecciona un estatus -", new {@class = "form-control"})
            </div>
        </div>

        <div class="col-lg-4">
            <div class="input-group date datetimepicker" data-min-view="2" data-date-format="dd/mm/yyyy">
                <div class="input-group-prepend">
                    @Html.LabelFor(model => model.FechaInicial, new { @class = "input-group-text prp" })
                </div>
                @Html.EditorFor(model => model.FechaInicial, new { @class = "form-control ", @type = "text", @id = "FechaInicio", @size = "12", @style = " text-align: right;" })
                <div class="input-group-append">
                    <div class="btn btn-secondary"><i class="fas fa-calendar"></i></div>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.FechaInicial, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4">
            <div class="input-group date datetimepicker" data-min-view="2" data-date-format="dd/mm/yyyy">
                <div class="input-group-prepend">
                    @Html.LabelFor(model => model.FechaFinal , new { @class = "input-group-text prp" })
                </div>
                @Html.EditorFor(model => model.FechaFinal, new { @class = "form-control ", @type = "text", @id = "FechaFin", @size = "12", @style = " text-align: right;" })
                <div class="input-group-append">
                    <div class="btn btn-secondary"><i class="fas fa-calendar"></i></div>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.FechaFinal, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-1">
            <button class="btn  btn-4t btn-sm " onclick="this.submit();" Style="margin:10px">
                <span class="fa fa-search"></span>Buscar
            </button>

        </div>
    </div>
}
        <div class="table-responsive noSwipe " style="padding: 20px">
            <table id="tablaDatos" class="table table-sm table-striped table-hover no-footer" style="background-color: rgba(200,200, 200, 0.5); color: black; font-size: 12px ">
                <thead class="text-bold">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Estima.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Estima.NoMemo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Estima.NoEstima)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Estima.Contrato) - @Html.DisplayNameFor(model => model.Estima.Proyecto)
                        </th>
                      
                        <th>
                            @Html.DisplayNameFor(model => model.Estima.TipoEstimacion)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Estima.ImporteOriginal)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Estima.AnticipoAmortizado)
                        </th>

                        <th>
                            <div class ="row">
                                <div class="col-12">
                                    @Html.DisplayNameFor(model => model.Estima.Devolucion)
                                </div>
                                <div class="col-12">
                                    @Html.DisplayNameFor(model => model.Estima.Retencion)
                                </div>
                            </div>
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Estima.FechaCreacionMemo)
                        </th>
                        @*<th>
                            @Html.DisplayNameFor(model => model.Estima.Estatus)
                        </th>*@
                        <th>ACCIONES</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.ListaEstimaciones)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NoMemo)
                            </td>
                            <td align="center">
                                @Html.DisplayFor(modelItem => item.NoEstima)
                            </td>
                            <td >
                                <div class="row">
                                    <div class="col-12">@Html.DisplayFor(modelItem => item.Contrato)</div>
                                    <div class="col-12"><strong> @Html.DisplayFor(modelItem => item.Proyecto)</strong></div> 
                                   
                                </div>
                               
                            </td>

                            <td align="center">
                                @Html.DisplayFor(modelItem => item.TipoEstimacion)
                            </td>
                            <td align="right">
                                @Html.DisplayFor(modelItem => item.ImporteOriginal)
                            </td>
                            <td align="right">
                                @Html.DisplayFor(modelItem => item.AnticipoAmortizado)
                            </td>
                            <td align ="right">
                                <div class="row">
                                    <div class="col-12">
                                        @Html.DisplayFor(modelItem => item.Devolucion)
                                    </div>
                                    <div class="col-12">
                                        @Html.DisplayFor(modelItem => item.Retencion)
                                    </div>
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FechaCreacionMemo)
                            </td>
                            @*<td>
                                @Html.DisplayFor(modelItem => item.Estatus)
                            </td>*@
                            <td>

                                @if (item.Estatus[0]==('3'))
                                {
                                    @*<a href="#" class="btn btn-4t btn-icon-split" type="button" data-toggle="modal" data-target="#Modal_@item.Id">
                                        <span class="icon text-white-50" data-toggle="tooltip" data-title="Generar Memorandum" >
                                            <i class="fas fa-plus-circle"></i>
                                        </span>
                                     
                                    </a>*@


                                    <button class="btn btn-circle btn-4t btn-sm "  data-toggle="modal" data-target="#Modal_@item.Id">
                                        <span class="fa fa-edit" data-toggle="tooltip" data-title="Generar Memo"></span>
                                    </button>


                                    <div id="Modal_@item.Id" class="modal fade " role="dialog">
                                        <div class="modal-dialog">

                                            <!-- Modal content-->
                                            <div class="modal-content">
                                               <div class="modal-header header4t">
                                                    <h4 class="modal-title" align="center">GENERAR MEMO @Html.DisplayFor(x => item.Proyecto) EST @Html.DisplayFor(x => item.NoEstima)</h4>
                                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                </div>
                                                <div class="modal-body ">
                                                    @using (Html.BeginForm("AgregarMemo", "Ventanilla", FormMethod.Post, new { @id = "agregarMemoForm_"+@item.Id }))
                                                    {
                                                      
                                                        @Html.HiddenFor(model => Model.NuevoMemo.Proyecto, new {  Value = @item.Proyecto })
                                                        @Html.HiddenFor(model => Model.NuevoMemo.Estima, new { Value = @item.NoEstima })

                                                        <div class="row">
                                                            <div class="col-sm-12">
                                                                <div class="input-group">
                                                                    <div class="input-group-prepend">@Html.LabelFor(x => Model.NuevoMemo.Atentamente, new {@class = "input-group-text prp"}) </div>
                                                                    @Html.DropDownListFor(x => Model.NuevoMemo.Atentamente, Model.Personal, "- Quien Envia -", new {@class = "form-control"})
                                                                </div>
                                                                @Html.ValidationMessageFor(model => Model.NuevoMemo.Atentamente, "", new {@class = "text-danger"})
                                                            </div>
                                                            <div class="col-sm-12">
                                                                <div class="input-group">
                                                                    <div class="input-group-prepend">@Html.LabelFor(x => Model.NuevoMemo.Para, new {@class = "input-group-text prp"}) </div>
                                                                    @Html.DropDownListFor(x => Model.NuevoMemo.Para, Model.Personal, "- Quien Recibe -", new {@class = "form-control"})
                                                                </div>
                                                                @Html.ValidationMessageFor(model => Model.NuevoMemo.Para, "", new {@class = "text-danger"})
                                                            </div>

                                                            <div class="col-sm-12">
                                                                <div class="input-group">
                                                                    <div class="input-group-prepend">@Html.LabelFor(x => Model.NuevoMemo.NumMemo, new { @class = "input-group-text prp" }) </div>
                                                                    @Html.TextBoxFor(x => Model.NuevoMemo.NumMemo, new { @class = "form-control" })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => Model.NuevoMemo.NumMemo, "", new { @class = "text-danger" })
                                                            </div>

                                                            <div class="col-sm-12">
                                                                <div class="input-group">
                                                                    <div class="input-group-prepend">@Html.LabelFor(x => Model.NuevoMemo.TextoMemo, new { @class = "input-group-text prp" }) </div>
                                                                    @Html.TextAreaFor(x => Model.NuevoMemo.TextoMemo, new { @class = "form-control", @type = "Text", @placeholder = "Agregue una descripcion de su programa", rows = "5", cols = "22" })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => Model.NuevoMemo.TextoMemo, "", new { @class = "text-danger" })
                                                            </div>

                                                            <div class="col-sm-12">
                                                                <div class="input-group">
                                                                    <div class="input-group-prepend">@Html.LabelFor(x => Model.NuevoMemo.Retencion, new {@class = "input-group-text prp"}) </div>
                                                                    @Html.TextBoxFor(x => Model.NuevoMemo.Retencion, new {@class = "form-control",  @style = "text-align:right" })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => Model.NuevoMemo.Retencion, "", new {@class = "text-danger"})
                                                            </div>
                                                            <div class="col-sm-12">
                                                                <div class="input-group">
                                                                    <div class="input-group-prepend">@Html.LabelFor(x => Model.NuevoMemo.Devolucion, new { @class = "input-group-text prp" }) </div>
                                                                    @Html.TextBoxFor(x => Model.NuevoMemo.Devolucion, new { @class = "form-control", @style="text-align:right" })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => Model.NuevoMemo.Devolucion, "", new { @class = "text-danger" })
                                                            </div>

                                                          
                                                          
                                                        </div>
                                                    }

                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-4t" data-dimiss="modal" onclick="mostrar_procesar(); $('#agregarMemoForm_@item.Id').submit();">Generar</button>
                                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                                </div>
                                            </div>

                                        </div>
                                    </div>


                                }

                                



                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>










@section Scripts
{
            <script src="~/assets/datatables/dataTables.bootstrap4.min.js"></script>
            <script src="~/assets/datatables/jquery.dataTables.min.js"></script>
            <script src="~/assets/datetimepicker/js/bootstrap-datetimepicker.min.js"></script>

            <script src="~/assets/datatables/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
            <script src="~/assets/datatables/datatables.net-buttons/js/buttons.flash.min.js"></script>
            <script src="~/assets/datatables/pdfmake/pdfmake.min.js"></script>
            <script src="~/assets/datatables/pdfmake/vfs_fonts.js"></script>
            <script src="~/assets/datatables/datatables.net-buttons/js/buttons.colVis.min.js"></script>
            <script src="~/assets/datatables/datatables.net-buttons/js/buttons.print.min.js"></script>
            <script src="~/assets/datatables/datatables.net-buttons/js/buttons.html5.min.js"></script>
            <script src="~/assets/datatables/datatables.net-buttons-bs4/js/buttons.bootstrap4.min.js"></script>
            @*<script src="~/assets/js/app-tables-datatables.js"></script>*@






    @*    <script src="~/assets/jquery.sparkline/jquery.sparkline.min.js"></script>*@
            <script>
                $(function () {
                    $('[data-toggle="tooltip"]').tooltip();
                })
                $(".datetimepicker").datetimepicker({
                    autoclose: true,
                    language: 'es',
                    componentIcon: '.fas.fa-calendar',
                    navIcons: {
                        rightIcon: 'fas fa-chevron-right',
                        leftIcon: 'fas fa-chevron-left'
                    },
                    format: "dd/mm/yyyy"
                });
                $('#tablaDatos').DataTable({
                    "language": {
                        "sProcessing": "Procesando...",
                        "sLengthMenu": "Ver _MENU_ registros",
                        "sZeroRecords": "No se encontraron resultados",
                        "sEmptyTable": "Ningún dato disponible en esta tabla",
                        "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                        "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                        "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                        "sInfoPostFix": "",
                        "sSearch": "Buscar:",
                        "sUrl": "",
                        "sInfoThousands": ",",
                        "sLoadingRecords": "Cargando...",
                        "oPaginate": {
                            "sFirst": " |< ",
                            "sLast": " >| ",
                            "sNext": " >> ",
                            "sPrevious": " << "
                        },
                        "oAria": {
                            "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                        },
                        "oButtons": {
                            "sCopy": "Copiar",
                            "sPrint": "Imprimir"
                        }
                    },
                    buttons: ['copy', 'csv', 'excel', 'pdf', 'print'],

                    "lengthMenu": [[20, 30, 40, 50, -1], [20, 30, 40, 50, "All"]],
                    dom: "<'row be-datatable-header'<'col-sm-6'l><'col-sm-6 text-right'B>>" +
                        "<'row be-datatable-body'<'col-sm-12'tr>>" +
                        "<'row be-datatable-footer'<'col-sm-5'i><'col-sm-7'p>>",
                    extend: 'pdf', className: 'btn green btn-outline',  text: 'Export PDF',
                customize: function (doc) {
                    doc.defaultStyle = 
                        {
                            font: 'alef'
                        }
                    var docDefinition = {
                        // a string or { width: number, height: number }
                        pageSize: 'carta',

                        // by default we use portrait, you can change it to landscape if you wish
                        pageOrientation: 'landscape',

                        // [left, top, right, bottom] or [horizontal, vertical] or just a number for equal margins
                        pageMargins: [ 40, 60, 40, 60 ],
                    };

                }

                });
               
            </script>


        }
